{"ast":null,"code":"var _jsxFileName = \"/Users/seohyeonkim/Weatherpj/pj/src/App.js\",\n  _s = $RefreshSig$();\nimport { BrowserRouter, Routes, Route, useLocation } from 'react-router-dom';\nimport CardPage from './pages/CardPage';\nimport OnboardingPage from './pages/OnboardingPage';\nimport Navbar from './components/Navbar';\nimport Home from './pages/Home';\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AppContent() {\n  _s();\n  const location = useLocation();\n  const showNavbar = location.pathname === '/home';\n  return (\n    /*#__PURE__*/\n    // alignItems: 'center'는 유지\n    _jsxDEV(\"div\", {\n      style: {\n        minHeight: '100vh',\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          flex: 1,\n          width: 440,\n          display: 'flex',\n          justifyContent: 'center',\n          paddingBottom: showNavbar ? '96px' : '0' /* <<< 이 부분 추가 */\n        },\n        children: /*#__PURE__*/_jsxDEV(Routes, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/\",\n            element: /*#__PURE__*/_jsxDEV(CardPage, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 36\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/onboarding\",\n            element: /*#__PURE__*/_jsxDEV(OnboardingPage, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 46\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/home\",\n            element: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 40\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 7\n      }, this), showNavbar && /*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)\n      /* Navbar 자체를 감싸던 div는 이제 필요 없습니다. \n         위치를 Navbar 내부에서 직접 제어하기 때문입니다. */]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }, this)\n  );\n}\n_s(AppContent, \"pkHmaVRPskBaU4tMJuJJpV42k1I=\", false, function () {\n  return [useLocation];\n});\n_c = AppContent;\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: /*#__PURE__*/_jsxDEV(AppContent, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"AppContent\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["BrowserRouter","Routes","Route","useLocation","CardPage","OnboardingPage","Navbar","Home","React","jsxDEV","_jsxDEV","AppContent","_s","location","showNavbar","pathname","style","minHeight","display","flexDirection","alignItems","children","flex","width","justifyContent","paddingBottom","path","element","fileName","_jsxFileName","lineNumber","columnNumber","_c","App","_c2","$RefreshReg$"],"sources":["/Users/seohyeonkim/Weatherpj/pj/src/App.js"],"sourcesContent":["import { BrowserRouter, Routes, Route, useLocation } from 'react-router-dom';\nimport CardPage from './pages/CardPage';\nimport OnboardingPage from './pages/OnboardingPage';\nimport Navbar from './components/Navbar'; \nimport Home from './pages/Home';\nimport React from 'react';\n\nfunction AppContent() {\n  const location = useLocation();\n  const showNavbar = location.pathname === '/home';\n  \n  return (\n    // alignItems: 'center'는 유지\n    <div style={{ minHeight: '100vh', display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\n      \n      {/* 페이지 콘텐츠 영역입니다.\n        Navbar가 있을 때(showNavbar) 그 높이(96px)만큼 하단에 패딩을 줍니다.\n      */}\n      <div style={{ \n        flex: 1, \n        width: 440, \n        display: 'flex', \n        justifyContent: 'center',\n        paddingBottom: showNavbar ? '96px' : '0' /* <<< 이 부분 추가 */\n      }}>\n        <Routes>\n          <Route path=\"/\" element={<CardPage />} />\n          <Route path=\"/onboarding\" element={<OnboardingPage />} />\n          <Route path=\"/home\" element={<Home />} />\n        </Routes>\n      </div>\n      \n      {/* Navbar는 position: fixed 이므로, DOM 구조상 어디에 위치해도 화면 하단에 고정됩니다.\n        논리적으로는 페이지 콘텐츠 다음에 오는 것이 자연스럽습니다.\n      */}\n      {showNavbar && (\n        <Navbar />\n        /* Navbar 자체를 감싸던 div는 이제 필요 없습니다. \n           위치를 Navbar 내부에서 직접 제어하기 때문입니다. */\n      )}\n    </div>\n  );\n}\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <AppContent />\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}